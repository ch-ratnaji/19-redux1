{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\n// import { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n      console.log(state.showCounter);\n    }\n  }\n});\n\n//const store = createStore(counterSlice.reducer);\n//const store = configureStore({reducer: counterSlice.reducer});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\n//counterSlice.actions.increment();\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","console","log","store","reducer","counterActions","actions"],"sources":["C:/Users/ratna/pro/19-redux1/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n// import { createStore } from 'redux';\r\nconst initialState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n            console.log(state.showCounter);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n//const store = createStore(counterSlice.reducer);\r\n//const store = configureStore({reducer: counterSlice.reducer});\r\nconst store = configureStore({ reducer: counterSlice.reducer });\r\n\r\n//counterSlice.actions.increment();\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D;AACA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;MACtCW,OAAO,CAACC,GAAG,CAACP,KAAK,CAACL,WAAW,CAAC;IAClC;EACJ;AACJ,CAAC,CAAC;;AAIF;AACA;AACA,MAAMa,KAAK,GAAGjB,cAAc,CAAC;EAAEkB,OAAO,EAAEb,YAAY,CAACa;AAAQ,CAAC,CAAC;;AAE/D;;AAEA,OAAO,MAAMC,cAAc,GAAGd,YAAY,CAACe,OAAO;AAElD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}